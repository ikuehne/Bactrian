(Define(Ok(print-endline(Lambda(Ok((c)()((Apply(Ok((ID print)((ID c)))))(Apply(Ok((ID print)((Char(Ok"\n")))))))))))))
(Define(Ok(nil(Lambda(Ok((a b)()((ID a))))))))
(Define(Ok(cons(Lambda(Ok((a b)()((Lambda(Ok((c d)()((Apply(Ok((ID d)((ID a)(ID b))))))))))))))))
(Define(Ok(car(Lambda(Ok((list)()((Apply(Ok((ID list)((Lambda(Ok(()()(Unit))))(Lambda(Ok((a b)()((ID a))))))))))))))))
(Define(Ok(cdr(Lambda(Ok((list)()((Apply(Ok((ID list)((Lambda(Ok(()()(Unit))))(Lambda(Ok((a b)()((ID b))))))))))))))))
(Define(Ok(nil?(Lambda(Ok((list)()((If(Apply(Ok((ID list)((Bool true)(Lambda(Ok((a b)()((Bool false)))))))))(Bool true)(Bool false)))))))))
(Define(Ok(cons?(Lambda(Ok((list)()((If(Apply(Ok((ID list)((Bool true)(Lambda(Ok((a b)()((Bool false)))))))))(Bool false)(Bool true)))))))))
(Define(Ok(curry(Lambda(Ok((f)()((Lambda(Ok((a)()((Lambda(Ok((b)()((Apply(Ok((ID f)((ID a)(ID b))))))))))))))))))))
(Define(Ok(map(Lambda(Ok((f list)()((If(Apply(Ok((ID nil?)((ID list)))))(ID nil)(Apply(Ok((ID cons)((Apply(Ok((ID f)((Apply(Ok((ID car)((ID list)))))))))(Apply(Ok((ID map)((ID f)(Apply(Ok((ID cdr)((ID list)))))))))))))))))))))
(Define(Ok(ignore(Lambda(Ok((x)()(Unit)))))))
(Define(Ok($(Lambda(Ok((f1 f2)()((Lambda(Ok((x)()((Apply(Ok((ID f1)((Apply(Ok((ID f2)((ID x))))))))))))))))))))
(Define(Ok($$(Lambda(Ok((f1 f2)()((Lambda(Ok((x y)()((Apply(Ok((ID f1)((Apply(Ok((ID f2)((ID x)(ID y))))))))))))))))))))
(Define(Ok(iter(Apply(Ok((ID $$)((ID ignore)(ID map))))))))
(Define(Ok(print-list(Apply(Ok((Apply(Ok((ID curry)((ID iter)))))((ID print))))))))
(Define(Ok(filter(Lambda(Ok((pred? list)()((If(Apply(Ok((ID nil?)((ID list)))))(ID nil)(If(Apply(Ok((ID pred?)((Apply(Ok((ID car)((ID list)))))))))(Apply(Ok((ID cons)((Apply(Ok((ID car)((ID list)))))(Apply(Ok((ID filter)((ID pred?)(Apply(Ok((ID cdr)((ID list)))))))))))))(Apply(Ok((ID filter)((ID pred?)(Apply(Ok((ID cdr)((ID list))))))))))))))))))
(Define(Ok(++(Lambda(Ok((list1 list2)()((If(Apply(Ok((ID nil?)((ID list1)))))(ID list2)(Apply(Ok((ID cons)((Apply(Ok((ID car)((ID list1)))))(Apply(Ok((ID ++)((Apply(Ok((ID cdr)((ID list1)))))(ID list2)))))))))))))))))
(Define(Ok(quicksort(Lambda(Ok((list)()((If(Apply(Ok((ID nil?)((ID list)))))(ID nil)(Apply(Ok((Lambda(Ok(()()((Define(Ok(less?(Lambda(Ok((x)()((Apply(Ok((ID <)((ID x)(Apply(Ok((ID car)((ID list))))))))))))))))(Define(Ok(more?(Lambda(Ok((x)()((Apply(Ok((ID >=)((ID x)(Apply(Ok((ID car)((ID list))))))))))))))))(Define(Ok(lesses(Apply(Ok((ID filter)((ID less?)(Apply(Ok((ID cdr)((ID list))))))))))))(Define(Ok(mores(Apply(Ok((ID filter)((ID more?)(Apply(Ok((ID cdr)((ID list))))))))))))(Apply(Ok((ID ++)((Apply(Ok((ID quicksort)((ID lesses)))))(Apply(Ok((ID cons)((Apply(Ok((ID car)((ID list)))))(Apply(Ok((ID quicksort)((ID mores)))))))))))))))))())))))))))))
(Define(Ok(level_one(Apply(Ok((ID cons)((Int(Ok 30))(Apply(Ok((ID cons)((Int(Ok 100))(Apply(Ok((ID cons)((Int(Ok 12))(Apply(Ok((ID cons)((Int(Ok 33))(Apply(Ok((ID cons)((Int(Ok 348))(Apply(Ok((ID cons)((Int(Ok -12))(Apply(Ok((ID cons)((Int(Ok 1239))(Apply(Ok((ID cons)((Int(Ok 82))(Apply(Ok((ID cons)((Int(Ok 21))(Apply(Ok((ID cons)((Int(Ok 193))(Apply(Ok((ID cons)((Int(Ok 29))(ID nil))))))))))))))))))))))))))))))))))))))))))))))))
(Define(Ok(get_level(Lambda(Ok((n)()((If(Apply(Ok((ID =)((ID n)(Int(Ok 0))))))(ID level_one)(Apply(Ok((Lambda(Ok(()()((Define(Ok(next_level(Apply(Ok((ID get_level)((Apply(Ok((ID -)((ID n)(Int(Ok 1)))))))))))))(Apply(Ok((ID ++)((ID next_level)(ID next_level)))))))))())))))))))))
(Define(Ok(not(Lambda(Ok((b)()((If(ID b)(Bool false)(Bool true)))))))))
(Define(Ok(or(Lambda(Ok((a b)()((If(ID a)(Bool true)(ID b)))))))))
(Define(Ok(xor(Lambda(Ok((a b)()((If(ID a)(Apply(Ok((ID not)((ID b)))))(ID b)))))))))
(Define(Ok(and(Lambda(Ok((a b)()((If(ID a)(ID b)(Bool false)))))))))
(Define(Ok(l=(Lambda(Ok((list1 list2)()((If(Apply(Ok((ID xor)((Apply(Ok((ID nil?)((ID list1)))))(Apply(Ok((ID nil?)((ID list2)))))))))(Bool false)(If(Apply(Ok((ID and)((Apply(Ok((ID nil?)((ID list1)))))(Apply(Ok((ID nil?)((ID list2)))))))))(Bool true)(If(Apply(Ok((ID =)((Apply(Ok((ID car)((ID list1)))))(Apply(Ok((ID car)((ID list2)))))))))(Apply(Ok((ID l=)((Apply(Ok((ID cdr)((ID list1)))))(Apply(Ok((ID cdr)((ID list2)))))))))(Bool false)))))))))))
(Define(Ok(pair(Lambda(Ok((a b)()((Lambda(Ok((x)()((Apply(Ok((ID x)((ID a)(ID b))))))))))))))))
(Define(Ok(fst(Lambda(Ok((t)()((Apply(Ok((ID t)((Lambda(Ok((a b)()((ID a))))))))))))))))
(Define(Ok(snd(Lambda(Ok((t)()((Apply(Ok((ID t)((Lambda(Ok((a b)()((ID b))))))))))))))))
(Define(Ok(print-pair(Lambda(Ok((t)()((Apply(Ok((ID print)((Apply(Ok((ID fst)((ID t)))))))))(Apply(Ok((ID print)((Char(Ok" "))))))(Apply(Ok((ID print)((Apply(Ok((ID snd)((ID t)))))))))(Apply(Ok((ID print)((Char(Ok"\n")))))))))))))
(Apply(Ok((ID print-pair)((Apply(Ok((ID pair)((Bool true)(Bool true)))))))))
(Define(Ok(zip(Lambda(Ok((list1 list2)()((If(Apply(Ok((ID or)((Apply(Ok((ID nil?)((ID list1)))))(Apply(Ok((ID nil?)((ID list2)))))))))(ID nil)(Apply(Ok((ID cons)((Apply(Ok((ID pair)((Apply(Ok((ID car)((ID list1)))))(Apply(Ok((ID car)((ID list2)))))))))(Apply(Ok((ID zip)((Apply(Ok((ID cdr)((ID list1)))))(Apply(Ok((ID cdr)((ID list2)))))))))))))))))))))
(Define(Ok(add-pair(Lambda(Ok((t)()((Apply(Ok((ID +)((Apply(Ok((ID fst)((ID t)))))(Apply(Ok((ID snd)((ID t))))))))))))))))
(Define(Ok(add-lists(Apply(Ok((ID $$)((Apply(Ok((Apply(Ok((ID curry)((ID map)))))((ID add-pair)))))(ID zip))))))))
(Define(Ok(abs(Lambda(Ok((x)()((If(Apply(Ok((ID >=)((ID x)(Int(Ok 0))))))(ID x)(Apply(Ok((ID -)((ID x)))))))))))))
(Apply(Ok((ID print-endline)((Apply(Ok((ID =)((Int(Ok 0))(Apply(Ok((ID abs)((Int(Ok 0))))))))))))))
(Apply(Ok((ID print-endline)((Apply(Ok((ID =)((Int(Ok 0))(Apply(Ok((ID abs)((Int(Ok 0))))))))))))))
(Apply(Ok((Lambda(Ok(()()((Apply(Ok((ID print)((Char(Ok #))))))(Apply(Ok((ID print)((Char(Ok t))))))))))())))
(Apply(Ok((ID print)((Char(Ok"\n"))))))
(Apply(Ok((ID print-list)((Apply(Ok((ID cons)((Char(Ok n))(Apply(Ok((ID cons)((Char(Ok e))(Apply(Ok((ID cons)((Char(Ok w))(Apply(Ok((ID cons)((Char(Ok l))(Apply(Ok((ID cons)((Char(Ok i))(Apply(Ok((ID cons)((Char(Ok n))(Apply(Ok((ID cons)((Char(Ok e))(Apply(Ok((ID cons)((Char(Ok"\n"))(ID nil)))))))))))))))))))))))))))))))))))))
(Define(Ok(a(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok a)))))))))
(Define(Ok(b(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok b)))))))))
(Define(Ok(c(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok c)))))))))
(Define(Ok(d(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok d)))))))))
(Define(Ok(e(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok e)))))))))
(Define(Ok(f(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok f)))))))))
(Define(Ok(g(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok g)))))))))
(Define(Ok(h(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok h)))))))))
(Define(Ok(i(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok i)))))))))
(Define(Ok(j(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok j)))))))))
(Define(Ok(k(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok k)))))))))
(Define(Ok(l(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok l)))))))))
(Define(Ok(m(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok m)))))))))
(Define(Ok(n(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok n)))))))))
(Define(Ok(o(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok o)))))))))
(Define(Ok(p(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok p)))))))))
(Define(Ok(q(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok q)))))))))
(Define(Ok(r(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok r)))))))))
(Define(Ok(s(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok s)))))))))
(Define(Ok(t(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok t)))))))))
(Define(Ok(u(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok u)))))))))
(Define(Ok(v(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok v)))))))))
(Define(Ok(w(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok w)))))))))
(Define(Ok(x(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok x)))))))))
(Define(Ok(y(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok y)))))))))
(Define(Ok(z(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok z)))))))))
(Define(Ok(!(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok !)))))))))
(Define(Ok(space(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok" ")))))))))
(Define(Ok(newline(Apply(Ok((Apply(Ok((ID curry)((ID cons)))))((Char(Ok"\n")))))))))
(Apply(Ok((ID print-list)((Apply(Ok((ID h)((Apply(Ok((ID e)((Apply(Ok((ID l)((Apply(Ok((ID l)((Apply(Ok((ID o)((Apply(Ok((ID space)((Apply(Ok((ID w)((Apply(Ok((ID o)((Apply(Ok((ID r)((Apply(Ok((ID l)((Apply(Ok((ID d)((Apply(Ok((ID !)((Apply(Ok((ID newline)((ID nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
